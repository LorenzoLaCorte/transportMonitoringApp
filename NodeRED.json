[
    {
        "id": "d9d2d71b4206e377",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b392c487ce7d94a7",
        "type": "debug",
        "z": "d9d2d71b4206e377",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 1060,
        "wires": []
    },
    {
        "id": "d3335f1e1d74c41c",
        "type": "aedes broker",
        "z": "d9d2d71b4206e377",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "persistence_bind": "memory",
        "dburl": "",
        "usetls": false,
        "x": 1110,
        "y": 1180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "65275a9ecc1be235",
        "type": "mqtt in",
        "z": "d9d2d71b4206e377",
        "name": "",
        "topic": "/tm/accelerometerX",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "64ce07a9bb65dd84",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 780,
        "wires": [
            [
                "b392c487ce7d94a7",
                "cda6995578fb3864"
            ]
        ]
    },
    {
        "id": "f55f831473c8ad52",
        "type": "mqtt in",
        "z": "d9d2d71b4206e377",
        "name": "",
        "topic": "/tm/accelerometerY",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "64ce07a9bb65dd84",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 840,
        "wires": [
            [
                "b392c487ce7d94a7",
                "cda6995578fb3864"
            ]
        ]
    },
    {
        "id": "9a9f5858dff9f1b2",
        "type": "mqtt in",
        "z": "d9d2d71b4206e377",
        "name": "",
        "topic": "/tm/accelerometerZ",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "64ce07a9bb65dd84",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 920,
        "wires": [
            [
                "b392c487ce7d94a7",
                "cda6995578fb3864"
            ]
        ]
    },
    {
        "id": "5f497606f3dc179b",
        "type": "mqtt in",
        "z": "d9d2d71b4206e377",
        "name": "",
        "topic": "/tm/noise",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "64ce07a9bb65dd84",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 740,
        "y": 980,
        "wires": [
            [
                "b392c487ce7d94a7",
                "cda6995578fb3864"
            ]
        ]
    },
    {
        "id": "3554aa8bd955decd",
        "type": "mqtt in",
        "z": "d9d2d71b4206e377",
        "name": "",
        "topic": "/tm/positionLatitude",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "64ce07a9bb65dd84",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 1040,
        "wires": [
            [
                "b392c487ce7d94a7",
                "cda6995578fb3864"
            ]
        ]
    },
    {
        "id": "5e4d95e17140b840",
        "type": "mqtt in",
        "z": "d9d2d71b4206e377",
        "name": "",
        "topic": "/tm/positionLongitude",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "64ce07a9bb65dd84",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 780,
        "y": 1100,
        "wires": [
            [
                "b392c487ce7d94a7",
                "cda6995578fb3864"
            ]
        ]
    },
    {
        "id": "4449d5aca3df6736",
        "type": "inject",
        "z": "d9d2d71b4206e377",
        "name": "timestamp 2",
        "props": [
            {
                "p": "time",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 400,
        "y": 740,
        "wires": [
            [
                "ab93c3fc3694f5b5"
            ]
        ]
    },
    {
        "id": "09bfacea924ee22d",
        "type": "REST Thing",
        "z": "d9d2d71b4206e377",
        "name": "DataSender",
        "url": "http://212.78.1.205:8080",
        "thingname": "DataReceiver",
        "x": 1630,
        "y": 920,
        "wires": []
    },
    {
        "id": "c808ae7606286881",
        "type": "debug",
        "z": "d9d2d71b4206e377",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1600,
        "y": 660,
        "wires": []
    },
    {
        "id": "bb4a9ec7755dc912",
        "type": "function",
        "z": "d9d2d71b4206e377",
        "name": "function 1",
        "func": "var accHighestNumber = 10\nvar accLowestNumber = -10\nvar accX = Math.random() * (accHighestNumber - accLowestNumber) + accLowestNumber;\nvar accY = Math.random() * (accHighestNumber - accLowestNumber) + accLowestNumber;\nvar accZ = Math.random() * (accHighestNumber - accLowestNumber) + accLowestNumber;\nvar noiseHighestNumber = 70\nvar noiseLowestNumber = 20\nvar noise = 71;\nvar latHighestNumber = 70\nvar latLowestNumber = 37\nvar lonHighestNumber = 11\nvar lonLowestNumber = 8\nvar lat = Math.random() * (latHighestNumber - latLowestNumber) + latLowestNumber;\nvar lon = Math.random() * (lonHighestNumber - lonLowestNumber) + lonLowestNumber;\n\nmsg.payload = {\n    \"accelerometerX\": accX,\n    \"accelerometerY\": accY,\n    \"accelerometerZ\": accZ,\n    \"noise\": noise,\n    \"latitude\": lat,\n    \"longitude\": lon\n};\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "cda6995578fb3864",
        "type": "function",
        "z": "d9d2d71b4206e377",
        "name": "function 2",
        "func": "var variableName = msg.topic.split(\"/\").pop();\nvar variableValue = parseFloat(msg.payload.replaceAll(\",\", \".\"));\n\nvar payloadObj = {}; // Create an empty object\n\n// Use square brackets to set the property name based on variableName\npayloadObj[variableName] = variableValue;\n\nmsg.payload = payloadObj;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 920,
        "wires": [
            [
                "c808ae7606286881",
                "09bfacea924ee22d"
            ]
        ]
    },
    {
        "id": "b1b77a60335f45ab",
        "type": "debug",
        "z": "d9d2d71b4206e377",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1600,
        "y": 620,
        "wires": []
    },
    {
        "id": "ab93c3fc3694f5b5",
        "type": "function",
        "z": "d9d2d71b4206e377",
        "name": "/tm/temperature",
        "func": "var tempHighestNumber = 26\nvar tempLowestNumber = 25\n\n//const currentDate = new Date();\n//const time = currentDate.getTime();\n\nvar temp = Math.random() * (tempHighestNumber - tempLowestNumber) + tempLowestNumber;\n\nmsg.payload = {\n    \"temperature\": temp,\n    \"timestamp\": msg.time,\n};\nmsg.topic = \"/tm/temperature\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 740,
        "wires": [
            [
                "b1b77a60335f45ab",
                "09bfacea924ee22d"
            ]
        ]
    },
    {
        "id": "9eabd8a6286190e9",
        "type": "function",
        "z": "d9d2d71b4206e377",
        "name": "/tm/crowding",
        "func": "var crowdHighestNumber = 26\nvar crowdLowestNumber = 25\n\n//const currentDate = new Date();\n//const time = currentDate.getTime();\n\nvar crowd = Math.random() * (crowdHighestNumber - crowdLowestNumber) + crowdLowestNumber;\n\nmsg.payload = {\n    \"crowding\": crowd,\n    \"timestamp\": msg.time,\n};\nmsg.topic = \"/tm/crowding\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 700,
        "wires": [
            [
                "09bfacea924ee22d",
                "b1b77a60335f45ab"
            ]
        ]
    },
    {
        "id": "e325b7e79dc86e6e",
        "type": "inject",
        "z": "d9d2d71b4206e377",
        "name": "timestamp 1",
        "props": [
            {
                "p": "time",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "0.2",
        "topic": "",
        "x": 400,
        "y": 700,
        "wires": [
            [
                "9eabd8a6286190e9"
            ]
        ]
    },
    {
        "id": "2ce9a59394856684",
        "type": "function",
        "z": "d9d2d71b4206e377",
        "name": "/tm/accelerometer-test",
        "func": "var crowdHighestNumber = 26\nvar crowdLowestNumber = 25\n\n//const currentDate = new Date();\n//const time = currentDate.getTime();\n\n\nmsg.payload = {\n    \"accelerometerX\": 10,\n    \"accelerometerZ\": 11,\n    \"accelerometerY\": 12,\n    \"accelerometer timestamp\": msg.time,\n};\nmsg.topic = \"/tm/accelerometer\"\n\nmsg.payload = JSON.stringify(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1280,
        "wires": [
            [
                "404153c61f25abfe"
            ]
        ]
    },
    {
        "id": "3fcdc654626316df",
        "type": "inject",
        "z": "d9d2d71b4206e377",
        "name": "timestamp 2",
        "props": [
            {
                "p": "time",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 400,
        "y": 1280,
        "wires": [
            [
                "2ce9a59394856684"
            ]
        ]
    },
    {
        "id": "404153c61f25abfe",
        "type": "function",
        "z": "d9d2d71b4206e377",
        "name": "json parse",
        "func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1280,
        "wires": [
            [
                "92d97bd0dcad37da",
                "09bfacea924ee22d"
            ]
        ]
    },
    {
        "id": "92d97bd0dcad37da",
        "type": "debug",
        "z": "d9d2d71b4206e377",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 1400,
        "wires": []
    },
    {
        "id": "64ce07a9bb65dd84",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]